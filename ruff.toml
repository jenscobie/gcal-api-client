exclude = [".venv"]
include = ["*.py"]
indent-width = 4
fix = true
line-length = 79 # https://peps.python.org/pep-0008/#maximum-line-length
output-format = "grouped"
src = ["src", "tests"]

[format]
docstring-code-format = true
docstring-code-line-length = 72 # https://peps.python.org/pep-0008/#maximum-line-length
indent-style = "space"
line-ending = "lf"
quote-style = "double"

[lint]
select = [
    "ALL"
    ]
ignore = [
    # These rules conflict with the ruff formatter
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "E111", # indentation-with-invalid-multiple
    "E114", # indentation-with-invalid-multiple-comment
    "E117", # over-indented
    "D100", # missing docstring in public module
    "D103", # missing docstring in public function
    "D203", # one-blank-line-before-class
    "D206", # indent-with-spaces
    "D213", # multi-line-summary-second-line
    "D300", # triple-single-quotes
    "Q000", # bad-quotes-inline-string
    "Q001", # bad-quotes-multiline-string
    "Q002", # bad-quotes-docstring
    "Q003", # avoidable-escaped-quote
    "COM812", # missing-trailing-comma, issue: https://github.com/astral-sh/ruff/issues/9216
    "COM819", # prohibited-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "ISC002", # multi-line-implicit-string-concatenation
    "FAST001", # FastAPI route with redundant `response_model` argument
    ]
fixable = [
    # pycodestyle
    "E", "W",
    # isort
    "I",
    # flake8
    "COM", # commas
    ]

[lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[lint.per-file-ignores]
"tests/*.py" = ["S101"] # Checks for uses of the assert keyword

[lint.pydocstyle]
convention = "google" # Use Google-style docstrings
